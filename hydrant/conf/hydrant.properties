#リクエストルールを設定する
#リクエストルールの形式
#　'::'の左側は適用対象を検索するルールの条件を設定する
#　'::'の右側はリライトルールを設定する
#
#適用対象検索項目
#　host   hydrantを動作させるマシンのIPアドレスを指定する
#　port   hydrantが受け付けるマシンのポート番号を指定する
#　path   hydrantが受け付けるディレクトリのパスを指定する
#　file   hydrantが受け付けるファイル名を指定する
#　ext    hydrantが受け付ける拡張子を指定する
#　param  hydrantが受け付けるGETパラメータのキーまたは値を指定する
#　h_xxx  hydrantが受け付けるヘッダーのキーまたは値を指定する
#　uastring  hydrantが受け付けるユーザーエージェント文字列を指定する
#  （各項目の区切り文字は'|'）
#適用対象検索項目とリライトルールは::で区切る
#　host   hydrantが書き換えるマシンのIPアドレスを指定する
#　port   hydrantが書き換えるマシンのポート番号を指定する
#　path   hydrantが書き換えるディレクトリのパスを指定する
#　file   hydrantが書き換えるファイル名を指定する
#　ext    hydrantが書き換える拡張子を指定する
#　param  hydrantが書き換えるGETパラメータのキーまたは値を指定する
#　h_xxx  hydrantが書き換えるヘッダーのキーまたは値を指定する
#
#設定は';;'区切りで複数指定可能
# 
#※リライトルールはパスとパラメータのみ、正規表現にマッチした部分置換を行いますが、その他は完全に設定した文字列に置き換えます。
#requestRule=port=83|path=/::host=pdfcrowd.com|port=80|path=/;;port=82|path=/::host=www.yahoo.co.jp|port=80|path=/;;path=/::host=localhost|port=80|path=/;;
requestRule=host=ownersbook.local::port=80;;path=/::host=localhost|port=80|path=/;;

# hydrantが動作するサーバーのホスト名とポート番号をペアで設定する。カンマ区切りで複数可能　※リロード不可項目。起動中は絶対に更新しない事
hostPort=192.168.11.4/81
# local設定のDNS解決を使用するかを指定
localDNSResolver=false

# ダウンロードスピード。KB/sec。０指定で制限なし
downloadSpeed=50

# リクエスト処理を行うクラスのパッケージ名、クラス名を設定する
resonseBuilder=com.kikisoftware.hydrant.server.WebRequest

# リクエスト受付時のタイムアウト時間をミリ秒で設定する
requestTimeout=300
# リクエストタイムアウトの確認間隔をミリ秒で設定する
timeoutCheckInterval=200
# レスポンス出力時のリトライ間隔をミリ秒で設定する
writeRetryInterval=50
# スルーレスポンスモードで使用するＩ／Ｏバッファの大きさを設定する
throughIOBufferSize=2048

# Keep-Aliveのタイムアウトをミリ秒で設定する
keepAliveTimeout=5000
# Keep-Aliveの最大リクエスト数を設定する
keepAliveMaxCount=100

# 変換処理を行うスレッド数を設定する
threadPoolSize=100
# Webサーバーへのソケット接続に失敗した際のリトライ回数を設定する
contentsSocketRetryLimit=10
# Webサーバからコンテンツを取得する際の待ち時間をミリ秒で設定する
contentsSocketTimeout=5000

# tcp/ip待ちうけスレッドの優先順位を設定する
httpThreadPriority=5
# ウェブサーバーへの通信とコンテンツ変換を行うスレッドの優先順位を設定する
requestThreadPriority=4
# アクセスログ出力を行うスレッドの優先順位を設定する
accessLogThreadPriority=5
# スタッツログ出力を行うスレッドの優先順位を設定する
statsLogThreadPriority=5

# xelion内でエラーが発生した場合に返すレスポンス定義ファイル
internalErrorResponseFile=conf/internalErrorResponse.txt

## access.log format
# {0}　リクエスト受付日時
# {1}　ブラウザ
# {2}　リクエストしたＵＲＬ
# {3}　リクエスの大きさ
# {4}　ウェブサーバーにTCP/IP接続のリトライをした回数
# {5}　リクエスト受付からウェブサーバーへリクエストを送信し終わるまでに掛かった時間
# {6}　リクエスト送信後からヘッダ部を全て受信するまでに掛かった時間
# {7}　変換完了からレスポンス完了までに掛かった時間
# {8}　コンテンツのMIME Type
# {9}　レスポンスの大きさ
# {10}　例外が発生した場合、始めに発生した例外の名前
# {11}　レスポンスが完了した時刻
# {12}　リライトしてリクエストしたウェブサーバーのＵＲＬ
# {13}　リクエストクライアントのユーザーエージェント
# {14}　処理待ちリクエストの数
# {15}　リクエストヘッダの大きさ
# {16}　リクエストボディの大きさ
# {17}　レスポンスヘッダの大きさ
# {18}　レスポンスボディの大きさ
accessLogFormat={0}->{11} [{1}] "{2}"({3}[{15}:{16})[{4}] <{14}> {5}>{6}>{7} "{8}"({9}[{17}:{18}]) "{10}" "{12}" "{13}"
## stats.log format
# {0}　起動している時間（ミリ秒）
# {1}　受け付けたTCP/IPコネクション数
# {2}　受け付けたリクエスト数
# {3}　破棄したキープアライブリクエスト数
# {4}　正常レスポンス数
# {5}　内部エラーが発生し、４０４を返した件数
# {6}　発生したリクエスト受信エラー件数
# {7}　ウェブサーバーに接続失敗した件数
# {8}　ウェブサーバーにリクエストを書き込んでいる際に発生したエラー件数
# {9}　ウェブサーバーからのコンテンツ読み込みに失敗した件数
# {10}　コンテンツ取得中に不明なエラーが発生した件数
# {11}　エラーレスポンスを書き込み中に発生したエラー件数
# {12}　正常なレスポンスを書き込み中に発生したエラー件数
# {13}　予期しないエラーが発生した件数
# {14}　クライアントからの送信データ総量（バイト）
# {14M}　クライアントからの送信データ総量（メガバイト）
# {15}　ウェブサーバーへ送信したデータ総量（バイト）
# {15M}　ウェブサーバーへ送信したデータ総量（メガバイト）
# {16}　ウェブサーバーから取得したデータ総量（バイト）
# {16M}　ウェブサーバーから取得したデータ総量（メガバイト）
# {17}　クライアントへ返したデータ総量（バイト）
# {17M}　クライアントへ返したデータ総量（メガバイト）
statsLogFormat=[{0}] con:{1} req(rej):res[{2}({3}):{4}] err:{5}[{6}:{7}:{8}:{9}:{10}:{11}:{12}:{13}] cu:{14} wu:{15} wd:{16} cd:{17}

# hydrantにコマンドを打つ事が可能なマシンのＩＰアドレス
commandableIP=127.0.0.1,localhost
# 設定リセットコマンドＵＲＬ
resetCommand=/pleaseResetAllSettingsFromFile
# 現在のstatsを取得するコマンドＵＲＬ
getStatsCommand=/pleaseGiveMeStats
# 現在の設定を取得するコマンドＵＲＬ
getSettingsCommand=/pleaseGiveMeSettings

# Statsログを出力する間隔（ミリ秒）　※リロード不可項目。起動中は絶対に更新しない事
statsInterval=3600000

# ************ 以下システム設定。通常は変更しない事 ************************************************************
# HTTPで使用するデフォルトポート
httpDefaultPort=80
# HTTPSで使用するデフォルトポート
httpsDefaultPort=443

# URLエンコードされず、HTTPヘッダに2バイト文字が生で使用されていた時に使う文字エンコードを指定（デフォルトはjavaのデフォルトcharsetを使用します）
rawHttpHeaderEncode=
# gzipリクエストヘッダを削除するかどうかを指定します（デフォルトはfalse）
removeGzipAcceptEncode=false

# ssl通信を行う際のホスト名とポート番号をペアで設定する。カンマ区切りで複数可能
sslHostPort=
# sslキーを配置したディレクトリを設定する。ＳＳＬが必要ない場合はこの値を削除すればよい
sslKey=
# キーのパスワードを設定する
sslKeyPass=
# キーストアのタイプを設定する
#sslKeyStoreType=JKS
# キーの暗号化アルゴリズムを設定する
#sslKeyAlgorithm=SunX509
# セキュリティ証明書を配置したディレクトリを設定する
sslTrust=
# トラストストアのパスワードを設定する
#sslTrustPass=changeit
# トラストストアのタイプを設定する
#sslTrustStoreType=JKS
# トラストストアの暗号化アルゴリズムを設定する
#sslTrustAlgorithm=SunX509
# 暗号化通信の方式を設定する
#sslType=TLS

# ssl暗号化/複合化を行うスレッド数を設定する
threadPoolSizeSSL=10
# ssl暗号化/複合化を行うスレッドの優先順位を設定する
httpsThreadPriority=5

